//  TestProject for Windows application

Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg

Object oHtmlHelp is a cHtmlHelp
End_Object

Object oApplication is a cApplication
    Set pbPreserveEnvironment to False
    Set peHelpType to htHtmlHelp
    Set psCompany to "Harsy Sistemas, Prog. Inf. Ltda"
    Set psProduct to "GNRE Library"
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu.pkg

Object oMain is a Panel

    Property Handle phoViewMenu 0
    Property Handle phoReportMenu 0

    Set Label to "Biblioteca GuiasGnre"
    Set Location to 4 3
    Set Size to 300 650
    Set View_Mode to ViewMode_Zoom

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True

        Procedure OnCreateCommandBars
            Handle hoOptions
            Get OptionsObject to hoOptions
            Forward Send OnCreateCommandBars
        End_Procedure
   
        Object oMenuBar is a cCJMenuBar
            
            Object oFileMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup          
                Set psCaption   to "&Arquivo"
                Set psDescription to "Localizar, gravar, excluir, limpar informa‡ao ou sair desta aplica‡ao"
                Set psCategory to "Menus"
    
                Object oClearMenuItem is a cCJClearMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oClearAllMenu is a cCJClearAllMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oPromptMenuItem is a cCJPromptMenuItem
                    Set pbAddToDesignerMenu to True
                    Set pbControlBeginGroup to True
                End_Object
    
                Object oFindMenuItem is a cCJFindMenuItem
                    Set pbAddToDesignerMenu to True
                    Set pbControlBeginGroup to True
                End_Object
    
                Object oFindNextMenu is a cCJFindNextMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oFindPreviousMenu is a cCJFindPreviousMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oFindFirstMenu is a cCJFindFirstMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oFindLastMenu is a cCJFindLastMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oSaveMenuItem is a cCJSaveMenuItem
                    Set pbAddToDesignerMenu to True
                    Set pbControlBeginGroup to True
                End_Object
    
                Object oDeleteMenuItem is a cCJDeleteMenuItem
                    Set pbAddToDesignerMenu to True
                End_Object
    
                Object oExitMenu is a cCJExitMenuItem
                    Set pbControlBeginGroup to True
                End_Object

            End_Object
            
            Object oViewMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup
                Set psCaption to "&Exemplos"
                Set psToolTip to "Exemplos"
                Set psDescription to "Exemplos dispon¡veis"

                Object ooExemploMenuItem is a cCJMenuItem
                    Set psCaption to "Exemplo da fun‡Æo GGGCriaAssinatura_Gratis"
                    Set psTooltip to "Exemplo da fun‡Æo GGGCriaAssinatura_Gratis"
                
                    Procedure OnExecute Variant vCommandBarControl
                        Handle hoClient
                        Get Client_Id to hoClient
                        Send Activate_oExemplo of hoClient
                    End_Procedure
                End_Object

                Object oGeraGuiaMenuItem is a cCJMenuItem
                    Set psCaption to "GeraGuia"
                    Set psTooltip to "GeraGuia"
                
                    Procedure OnExecute Variant vCommandBarControl
                        Handle hoClient
                        Get Client_Id to hoClient
                        Send Activate_oExemplo2 of hoClient
                    End_Procedure
                End_Object
            End_Object
            
            Object oReportMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup          
                Set psCaption to "&Relat¢rios"
                Set psToolTip to "Relat¢rios"
                Set psDescription to "Relat¢rios dispon¡veis"
            End_Object
            
            Object oNavigateMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup      
                Set psCaption to "&Navega‡ao"    
                Set psTooltip to "Navega‡ao"    
                Set psDescription to "Posicionar em diferentes  reas da aplica‡ao"
                
                Object oNextAreaMenu is a cCJNextAreaMenu
                End_Object
                
                Object oPriorAreaMenu is a cCJPriorAreaMenu
                End_Object
                
                Object oNextViewMenu is a cCJNextViewMenu
                End_Object
                
                Object oPriorViewMenu is a cCJPriorViewMenu
                End_Object
                
                Object oPromptMenu is a cCJPromptMenuItem
                    Set pbControlBeginGroup to True
                End_Object
    
                Object oZoomMenu is a cCJZoomMenuItem
                End_Object
    
            End_Object
    
            Object oWindowMenu is a cCJMDIWindowsMenuItem
                Set peControlType to xtpControlPopup      
                Set psCaption to "&Janela"
                Set psToolTip to "Janela"
                Set psDescription to "Mostrar views atuais e setar outras op‡oes de apresenta‡ao"    
                
                // These are the static windows items. More will be created in onInitPopup 
                Object oDisplayOptionsMenu is a cCJMenuItem
                    Set peControlType to xtpControlPopup          
                    Set psCaption to "Op‡oes de &apresenta‡ao"
                    Set psToolTip to "Op‡oes de apresenta‡ao"
                    Set psDescription to "Configurar modo de apresenta‡ao"
    
                    Object oStatusbarMenu is a cCJStatusbarMenuItem
                    End_Object
    
                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
                    End_Object
    
                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
                        Set pbControlBeginGroup to True
                    End_Object

                End_Object
    
                Object oCascadeMenu is a cCJCascadeMenuItem
                    Set pbControlBeginGroup to True
                End_Object
    
                Object oHorizTile is a cCJTileHorizontally
                End_Object
    
                Object oVertTile is a cCJTileVertically
                End_Object
    
                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
                    Set pbControlBeginGroup to True
                End_Object
    
                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
                End_Object
    
                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
                    Set pbControlBeginGroup to True
                End_Object
    
            End_Object
            
            Object oHelpMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup    
                Set psCaption to "&Ajuda"
                Set psDescription to "Acessar informa‡ao para aprendizado e uso desta aplica‡ao DataFlex"
                Set psToolTip to "Ajuda"
                
                Object oHelpMenuItem is a cCJHelpMenuItem 
                End_Object
    
                Object oAboutMenuItem is a cCJAboutMenuItem
                End_Object
           
            End_Object
    
        End_Object
    
        Object oFindToolBar is a cCJToolbar
            Set psTitle to "Barra de ferramentas de busca"
    
            Object oFindFirstTool is a cCJFindFirstMenuItem
            End_Object
    
            Object oFindPreviousTool is a cCJFindPreviousMenuItem
            End_Object
    
            Object oFindMenuTool is a cCJFindMenuItem
            End_Object
    
            Object oFindNextTool is a cCJFindNextMenuItem
            End_Object
    
            Object oFindLastTool is a cCJFindLastMenuItem
            End_Object
    
            Object oPromptToolItem is a cCJPromptMenuItem
                Set pbControlBeginGroup to True
            End_Object
    
        End_Object
            
        Object oFileToolBar is a cCJToolbar
            Set psTitle to "Barra de ferramentas de entrada de dados"
    
            Object oClearToolItem is a cCJClearMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
            End_Object
            
            Object oClearAllToolItem2 is a cCJClearAllMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
            End_Object
                
            Object oSaveToolItem is a cCJSaveMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set pbControlBeginGroup to True
            End_Object
    
            Object oDeleteToolItem is a cCJDeleteMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
            End_Object
    
        End_Object
    
        Object oEditToolBar is a cCJToolbar
            Set psTitle to "Barra de ferramentas de edi‡ao"
            
            Object oCutToolbarItem is a cCJCutMenuItem
            End_Object
    
            Object oCopyToolbarItem is a cCJCopyMenuItem
            End_Object
    
            Object oPasteToolbarItem is a cCJPasteMenuItem
            End_Object
    
            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
                Set pbControlBeginGroup to True
            End_Object
    
        End_Object
        
        Object oStatusBar is a cCJStatusBar
            
            Object oStatusPane1 is a cCJStatusBarPane
                Set piID to sbpIDIdlePane
                Set pbStyleStretch to True
            End_Object
    
            Object oStatusPane2 is a cCJStatusBarPane
                Set phoViewPane to Self
                Set pbStyleStretch to True
            End_Object

        End_Object

        // for testing we define the view and report menus for auto activate
        Delegate Set phoViewMenu to (oViewMenu)
        Delegate Set phoReportMenu to (oReportMenu)
    
    End_Object
   
    Object oClientArea is a ClientArea

        Use Dd_debug.dg // This Provides access to dd debugger by pressing ctrl+d within any view. Good for debugging

        Use StdAbout.pkg
        Use Views\exemplo.vw
        Use Views\exemplo2.vw

        Procedure Activate_About
            Send DoAbout "Test Windows Project" "0.0.0" "" "" ""
        End_Procedure

    End_Object


    // All of the code below are methods and augmentations which makes this work well as a test program. This:
    // 1. Supports an auto-activate feature where all dialogs in the view and report menu are activated upon startup
    // 2. forces the panel to resize if it is not large enough to accomodate all of the views.
    // This code was placed directly in the testproject template and, therefore, directly in the .src file so
    // a developer can easily modify this to fit their own needs. It is not expected that these techniques would
    // get used in actual deployed projects.

    // special test component code to activate all views and reports. For testing we assume
    // that you want to see everything.

    Procedure AutoActivate
        handle hoMenu

        // this activates all views from the view menu
        Get phoViewMenu to hoMenu
        If hoMenu begin
           Broadcast Send Execute of hoMenu
        End

        // this activates all views from the report view menu
        Get phoReportMenu to hoMenu
        If hoMenu begin
           Broadcast Send Execute of hoMenu
        End
    End_Procedure

    // This checks all views within the client area to make sure that they fit within
    // the client area. If not we will adjust the main panel so everything fits. This
    // can only be done after the objects are all activated.

    Procedure MakeGoodPanelSize
        Handle hoView hoClient
        Integer iSize iLoc iHeight iWidth iOldSize
        Get Client_Id to hoClient
        If hoClient begin
            Get GuiSize of hoClient to iOldSize  // starting size of client area
            Move (Hi(iOldSize)) to iHeight
            Move (Low(iOldSize)) to iWidth
            // for each mdi client see if it fits, keep track of largest size needed
            Get Next_Mdi_Dialog of hoClient True to hoView // find first
            While (hoView)
                Get GuiSize of hoView to iSize    // size of view
                Get GuiLocation of hoView to iLoc // location of view
                Move (hi(iSize)+hi(iLoc)+10 max iHeight)  to iHeight // max height needed (+10 is for wiggle room)
                Move (low(iSize)+low(iLoc)+10 max iWidth) to iWidth  // max width needed
                Get Next_Mdi_Dialog of hoClient False to hoView // find next view
            Loop
            Move (iHeight-hi(iOldSize) max 0) to iHeight // get delta compared to old size. We want delta
            Move (iWidth-low(iOldSize) max 0) to iWidth  // only if the new size is bigger (i.e., > 0)
            If  (iHeight>0 or iWidth>0) begin
                Get GuiSize to iOldSize // now add the delta to the panel size
                Set GuiSize to (hi(iOldSize)+iHeight) (low(iOldSize)+iWidth)
                Send Adjust_Logicals // adjust from gui to regular size
            End
        End
    End_Procedure

    // special test program  augmentation which opens all views and report views and
    // makes sure that the size of the panel is big enough

    Procedure End_Construct_Object
        Boolean bAutoActivate
        Get Auto_Activate_State to bAutoActivate
        Forward send End_Construct_Object
        If bAutoActivate begin
            Send AutoActivate       // activate all views and report views
            Send MakeGoodPanelSize  // make sure the panel is big enough for all of this
        End
    End_Procedure

End_Object

Start_UI
